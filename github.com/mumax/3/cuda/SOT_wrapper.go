package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import(
	"unsafe"
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
)

// CUDA handle for addspinorbittorque kernel
var addspinorbittorque_code cu.Function

// Stores the arguments for addspinorbittorque kernel invocation
type addspinorbittorque_args_t struct{
	 arg_tx unsafe.Pointer
	 arg_ty unsafe.Pointer
	 arg_tz unsafe.Pointer
	 arg_mx unsafe.Pointer
	 arg_my unsafe.Pointer
	 arg_mz unsafe.Pointer
	 arg_jz unsafe.Pointer
	 arg_sigx unsafe.Pointer
	 arg_sigy unsafe.Pointer
	 arg_sigz unsafe.Pointer
	 arg_msatLUT unsafe.Pointer
	 arg_alphaLUT unsafe.Pointer
	 arg_flt float32
	 arg_tSL unsafe.Pointer
	 arg_tFL unsafe.Pointer
	 arg_regions unsafe.Pointer
	 arg_N int
	 argptr [17]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for addspinorbittorque kernel invocation
var addspinorbittorque_args addspinorbittorque_args_t

func init(){
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	 addspinorbittorque_args.argptr[0] = unsafe.Pointer(&addspinorbittorque_args.arg_tx)
	 addspinorbittorque_args.argptr[1] = unsafe.Pointer(&addspinorbittorque_args.arg_ty)
	 addspinorbittorque_args.argptr[2] = unsafe.Pointer(&addspinorbittorque_args.arg_tz)
	 addspinorbittorque_args.argptr[3] = unsafe.Pointer(&addspinorbittorque_args.arg_mx)
	 addspinorbittorque_args.argptr[4] = unsafe.Pointer(&addspinorbittorque_args.arg_my)
	 addspinorbittorque_args.argptr[5] = unsafe.Pointer(&addspinorbittorque_args.arg_mz)
	 addspinorbittorque_args.argptr[6] = unsafe.Pointer(&addspinorbittorque_args.arg_jz)
	 addspinorbittorque_args.argptr[7] = unsafe.Pointer(&addspinorbittorque_args.arg_sigx)
	 addspinorbittorque_args.argptr[8] = unsafe.Pointer(&addspinorbittorque_args.arg_sigy)
	 addspinorbittorque_args.argptr[9] = unsafe.Pointer(&addspinorbittorque_args.arg_sigz)
	 addspinorbittorque_args.argptr[10] = unsafe.Pointer(&addspinorbittorque_args.arg_msatLUT)
	 addspinorbittorque_args.argptr[11] = unsafe.Pointer(&addspinorbittorque_args.arg_alphaLUT)
	 addspinorbittorque_args.argptr[12] = unsafe.Pointer(&addspinorbittorque_args.arg_flt)
	 addspinorbittorque_args.argptr[13] = unsafe.Pointer(&addspinorbittorque_args.arg_tSL)
	 addspinorbittorque_args.argptr[14] = unsafe.Pointer(&addspinorbittorque_args.arg_tFL)
	 addspinorbittorque_args.argptr[15] = unsafe.Pointer(&addspinorbittorque_args.arg_regions)
	 addspinorbittorque_args.argptr[16] = unsafe.Pointer(&addspinorbittorque_args.arg_N)
	 }

// Wrapper for addspinorbittorque CUDA kernel, asynchronous.
func k_addspinorbittorque_async ( tx unsafe.Pointer, ty unsafe.Pointer, tz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, jz unsafe.Pointer, sigx unsafe.Pointer, sigy unsafe.Pointer, sigz unsafe.Pointer, msatLUT unsafe.Pointer, alphaLUT unsafe.Pointer, flt float32, tSL unsafe.Pointer, tFL unsafe.Pointer, regions unsafe.Pointer, N int,  cfg *config) {
	if Synchronous{ // debug
		Sync()
		timer.Start("addspinorbittorque")
	}

	addspinorbittorque_args.Lock()
	defer addspinorbittorque_args.Unlock()

	if addspinorbittorque_code == 0{
		addspinorbittorque_code = fatbinLoad(addspinorbittorque_map, "addspinorbittorque")
	}

	 addspinorbittorque_args.arg_tx = tx
	 addspinorbittorque_args.arg_ty = ty
	 addspinorbittorque_args.arg_tz = tz
	 addspinorbittorque_args.arg_mx = mx
	 addspinorbittorque_args.arg_my = my
	 addspinorbittorque_args.arg_mz = mz
	 addspinorbittorque_args.arg_jz = jz
	 addspinorbittorque_args.arg_sigx = sigx
	 addspinorbittorque_args.arg_sigy = sigy
	 addspinorbittorque_args.arg_sigz = sigz
	 addspinorbittorque_args.arg_msatLUT = msatLUT
	 addspinorbittorque_args.arg_alphaLUT = alphaLUT
	 addspinorbittorque_args.arg_flt = flt
	 addspinorbittorque_args.arg_tSL = tSL
	 addspinorbittorque_args.arg_tFL = tFL
	 addspinorbittorque_args.arg_regions = regions
	 addspinorbittorque_args.arg_N = N
	

	args := addspinorbittorque_args.argptr[:]
	cu.LaunchKernel(addspinorbittorque_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous{ // debug
		Sync()
		timer.Stop("addspinorbittorque")
	}
}

// maps compute capability on PTX code for addspinorbittorque kernel.
var addspinorbittorque_map = map[int]string{ 0: "" ,
30: addspinorbittorque_ptx_30 ,
35: addspinorbittorque_ptx_35 ,
50: addspinorbittorque_ptx_50 ,
52: addspinorbittorque_ptx_52 ,
53: addspinorbittorque_ptx_53  }

// addspinorbittorque PTX code for various compute capabilities.
const(
  addspinorbittorque_ptx_30 = `
.version 6.1
.target sm_30
.address_size 64

	// .globl	addspinorbittorque

.visible .entry addspinorbittorque(
	.param .u64 addspinorbittorque_param_0,
	.param .u64 addspinorbittorque_param_1,
	.param .u64 addspinorbittorque_param_2,
	.param .u64 addspinorbittorque_param_3,
	.param .u64 addspinorbittorque_param_4,
	.param .u64 addspinorbittorque_param_5,
	.param .u64 addspinorbittorque_param_6,
	.param .u64 addspinorbittorque_param_7,
	.param .u64 addspinorbittorque_param_8,
	.param .u64 addspinorbittorque_param_9,
	.param .u64 addspinorbittorque_param_10,
	.param .u64 addspinorbittorque_param_11,
	.param .f32 addspinorbittorque_param_12,
	.param .u64 addspinorbittorque_param_13,
	.param .u64 addspinorbittorque_param_14,
	.param .u64 addspinorbittorque_param_15,
	.param .u32 addspinorbittorque_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<54>;


	ld.param.u64 	%rd3, [addspinorbittorque_param_0];
	ld.param.u64 	%rd4, [addspinorbittorque_param_1];
	ld.param.u64 	%rd5, [addspinorbittorque_param_2];
	ld.param.u64 	%rd6, [addspinorbittorque_param_3];
	ld.param.u64 	%rd7, [addspinorbittorque_param_4];
	ld.param.u64 	%rd8, [addspinorbittorque_param_5];
	ld.param.u64 	%rd9, [addspinorbittorque_param_6];
	ld.param.u64 	%rd10, [addspinorbittorque_param_7];
	ld.param.u64 	%rd11, [addspinorbittorque_param_8];
	ld.param.u64 	%rd12, [addspinorbittorque_param_9];
	ld.param.u64 	%rd13, [addspinorbittorque_param_10];
	ld.param.u64 	%rd14, [addspinorbittorque_param_11];
	ld.param.f32 	%f15, [addspinorbittorque_param_12];
	ld.param.u64 	%rd15, [addspinorbittorque_param_13];
	ld.param.u64 	%rd16, [addspinorbittorque_param_14];
	ld.param.u64 	%rd17, [addspinorbittorque_param_15];
	ld.param.u32 	%r2, [addspinorbittorque_param_16];
	mov.u32 	%r3, %ctaid.y;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_5;

	cvta.to.global.u64 	%rd18, %rd6;
	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd18, %rd19;
	ld.global.f32 	%f1, [%rd20];
	cvta.to.global.u64 	%rd21, %rd7;
	add.s64 	%rd22, %rd21, %rd19;
	ld.global.f32 	%f2, [%rd22];
	cvta.to.global.u64 	%rd23, %rd8;
	add.s64 	%rd24, %rd23, %rd19;
	ld.global.f32 	%f3, [%rd24];
	cvta.to.global.u64 	%rd25, %rd9;
	add.s64 	%rd26, %rd25, %rd19;
	ld.global.f32 	%f4, [%rd26];
	cvta.to.global.u64 	%rd27, %rd10;
	add.s64 	%rd28, %rd27, %rd19;
	cvta.to.global.u64 	%rd29, %rd11;
	add.s64 	%rd30, %rd29, %rd19;
	cvta.to.global.u64 	%rd31, %rd12;
	add.s64 	%rd32, %rd31, %rd19;
	ld.global.f32 	%f5, [%rd28];
	ld.global.f32 	%f6, [%rd30];
	mul.f32 	%f17, %f6, %f6;
	fma.rn.f32 	%f18, %f5, %f5, %f17;
	ld.global.f32 	%f7, [%rd32];
	fma.rn.f32 	%f19, %f7, %f7, %f18;
	sqrt.rn.f32 	%f8, %f19;
	mov.f32 	%f63, 0f00000000;
	setp.eq.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	rcp.rn.f32 	%f63, %f8;

BB0_3:
	mul.f32 	%f11, %f5, %f63;
	mul.f32 	%f12, %f6, %f63;
	mul.f32 	%f13, %f7, %f63;
	cvta.to.global.u64 	%rd33, %rd17;
	add.s64 	%rd34, %rd33, %rd1;
	ld.global.u8 	%rs1, [%rd34];
	cvt.u64.u16	%rd35, %rs1;
	and.b64  	%rd2, %rd35, 255;
	cvta.to.global.u64 	%rd36, %rd13;
	cvt.u32.u16	%r9, %rs1;
	and.b32  	%r10, %r9, 255;
	mul.wide.u32 	%rd37, %r10, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.f32 	%f14, [%rd38];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_5;

	cvta.to.global.u64 	%rd39, %rd14;
	shl.b64 	%rd40, %rd2, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.f32 	%f20, [%rd41];
	cvta.to.global.u64 	%rd42, %rd16;
	add.s64 	%rd44, %rd42, %rd37;
	cvta.to.global.u64 	%rd45, %rd15;
	add.s64 	%rd46, %rd45, %rd37;
	add.f32 	%f21, %f15, %f15;
	mul.f32 	%f22, %f21, %f14;
	div.rn.f32 	%f23, %f4, %f22;
	cvt.f64.f32	%fd1, %f23;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f24, %fd2;
	fma.rn.f32 	%f25, %f20, %f20, 0f3F800000;
	mov.f32 	%f26, 0fBF800000;
	div.rn.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f27, %f24;
	ld.global.f32 	%f29, [%rd46];
	mul.f32 	%f30, %f29, %f28;
	ld.global.f32 	%f31, [%rd44];
	mul.f32 	%f32, %f31, %f28;
	mul.f32 	%f33, %f3, %f12;
	mul.f32 	%f34, %f2, %f13;
	sub.f32 	%f35, %f34, %f33;
	mul.f32 	%f36, %f1, %f13;
	mul.f32 	%f37, %f3, %f11;
	sub.f32 	%f38, %f37, %f36;
	mul.f32 	%f39, %f2, %f11;
	mul.f32 	%f40, %f1, %f12;
	sub.f32 	%f41, %f40, %f39;
	mul.f32 	%f42, %f2, %f41;
	mul.f32 	%f43, %f3, %f38;
	sub.f32 	%f44, %f42, %f43;
	mul.f32 	%f45, %f3, %f35;
	mul.f32 	%f46, %f1, %f41;
	sub.f32 	%f47, %f45, %f46;
	mul.f32 	%f48, %f1, %f38;
	mul.f32 	%f49, %f2, %f35;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f44, %f30;
	fma.rn.f32 	%f52, %f35, %f32, %f51;
	cvta.to.global.u64 	%rd47, %rd3;
	add.s64 	%rd49, %rd47, %rd19;
	ld.global.f32 	%f53, [%rd49];
	add.f32 	%f54, %f53, %f52;
	st.global.f32 	[%rd49], %f54;
	mul.f32 	%f55, %f47, %f30;
	fma.rn.f32 	%f56, %f38, %f32, %f55;
	cvta.to.global.u64 	%rd50, %rd4;
	add.s64 	%rd51, %rd50, %rd19;
	ld.global.f32 	%f57, [%rd51];
	add.f32 	%f58, %f57, %f56;
	st.global.f32 	[%rd51], %f58;
	mul.f32 	%f59, %f50, %f30;
	fma.rn.f32 	%f60, %f41, %f32, %f59;
	cvta.to.global.u64 	%rd52, %rd5;
	add.s64 	%rd53, %rd52, %rd19;
	ld.global.f32 	%f61, [%rd53];
	add.f32 	%f62, %f61, %f60;
	st.global.f32 	[%rd53], %f62;

BB0_5:
	ret;
}


`
   addspinorbittorque_ptx_35 = `
.version 6.1
.target sm_35
.address_size 64

	// .globl	addspinorbittorque

.visible .entry addspinorbittorque(
	.param .u64 addspinorbittorque_param_0,
	.param .u64 addspinorbittorque_param_1,
	.param .u64 addspinorbittorque_param_2,
	.param .u64 addspinorbittorque_param_3,
	.param .u64 addspinorbittorque_param_4,
	.param .u64 addspinorbittorque_param_5,
	.param .u64 addspinorbittorque_param_6,
	.param .u64 addspinorbittorque_param_7,
	.param .u64 addspinorbittorque_param_8,
	.param .u64 addspinorbittorque_param_9,
	.param .u64 addspinorbittorque_param_10,
	.param .u64 addspinorbittorque_param_11,
	.param .f32 addspinorbittorque_param_12,
	.param .u64 addspinorbittorque_param_13,
	.param .u64 addspinorbittorque_param_14,
	.param .u64 addspinorbittorque_param_15,
	.param .u32 addspinorbittorque_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<54>;


	ld.param.u64 	%rd2, [addspinorbittorque_param_0];
	ld.param.u64 	%rd3, [addspinorbittorque_param_1];
	ld.param.u64 	%rd4, [addspinorbittorque_param_2];
	ld.param.u64 	%rd5, [addspinorbittorque_param_3];
	ld.param.u64 	%rd6, [addspinorbittorque_param_4];
	ld.param.u64 	%rd7, [addspinorbittorque_param_5];
	ld.param.u64 	%rd8, [addspinorbittorque_param_6];
	ld.param.u64 	%rd9, [addspinorbittorque_param_7];
	ld.param.u64 	%rd10, [addspinorbittorque_param_8];
	ld.param.u64 	%rd11, [addspinorbittorque_param_9];
	ld.param.u64 	%rd12, [addspinorbittorque_param_10];
	ld.param.u64 	%rd13, [addspinorbittorque_param_11];
	ld.param.f32 	%f15, [addspinorbittorque_param_12];
	ld.param.u64 	%rd14, [addspinorbittorque_param_13];
	ld.param.u64 	%rd15, [addspinorbittorque_param_14];
	ld.param.u64 	%rd16, [addspinorbittorque_param_15];
	ld.param.u32 	%r1, [addspinorbittorque_param_16];
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r1;
	@%p1 bra 	BB0_5;

	cvta.to.global.u64 	%rd17, %rd5;
	mul.wide.s32 	%rd18, %r8, 4;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.nc.f32 	%f1, [%rd19];
	cvta.to.global.u64 	%rd20, %rd6;
	add.s64 	%rd21, %rd20, %rd18;
	ld.global.nc.f32 	%f2, [%rd21];
	cvta.to.global.u64 	%rd22, %rd7;
	add.s64 	%rd23, %rd22, %rd18;
	ld.global.nc.f32 	%f3, [%rd23];
	cvta.to.global.u64 	%rd24, %rd8;
	add.s64 	%rd25, %rd24, %rd18;
	ld.global.nc.f32 	%f4, [%rd25];
	cvta.to.global.u64 	%rd26, %rd9;
	add.s64 	%rd27, %rd26, %rd18;
	cvta.to.global.u64 	%rd28, %rd10;
	add.s64 	%rd29, %rd28, %rd18;
	cvta.to.global.u64 	%rd30, %rd11;
	add.s64 	%rd31, %rd30, %rd18;
	ld.global.nc.f32 	%f5, [%rd27];
	ld.global.nc.f32 	%f6, [%rd29];
	mul.f32 	%f17, %f6, %f6;
	fma.rn.f32 	%f18, %f5, %f5, %f17;
	ld.global.nc.f32 	%f7, [%rd31];
	fma.rn.f32 	%f19, %f7, %f7, %f18;
	sqrt.rn.f32 	%f8, %f19;
	mov.f32 	%f63, 0f00000000;
	setp.eq.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	rcp.rn.f32 	%f63, %f8;

BB0_3:
	mul.f32 	%f11, %f5, %f63;
	mul.f32 	%f12, %f6, %f63;
	mul.f32 	%f13, %f7, %f63;
	cvt.s64.s32	%rd32, %r8;
	cvta.to.global.u64 	%rd33, %rd16;
	add.s64 	%rd34, %rd33, %rd32;
	ld.global.nc.u8 	%rs1, [%rd34];
	cvt.u64.u16	%rd35, %rs1;
	and.b64  	%rd1, %rd35, 255;
	cvta.to.global.u64 	%rd36, %rd12;
	cvt.u32.u16	%r23, %rs1;
	and.b32  	%r24, %r23, 255;
	mul.wide.u32 	%rd37, %r24, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.nc.f32 	%f14, [%rd38];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_5;

	cvta.to.global.u64 	%rd39, %rd13;
	shl.b64 	%rd40, %rd1, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.nc.f32 	%f20, [%rd41];
	cvta.to.global.u64 	%rd42, %rd15;
	add.s64 	%rd44, %rd42, %rd37;
	cvta.to.global.u64 	%rd45, %rd14;
	add.s64 	%rd46, %rd45, %rd37;
	add.f32 	%f21, %f15, %f15;
	mul.f32 	%f22, %f21, %f14;
	div.rn.f32 	%f23, %f4, %f22;
	cvt.f64.f32	%fd1, %f23;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f24, %fd2;
	fma.rn.f32 	%f25, %f20, %f20, 0f3F800000;
	mov.f32 	%f26, 0fBF800000;
	div.rn.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f27, %f24;
	ld.global.nc.f32 	%f29, [%rd46];
	mul.f32 	%f30, %f29, %f28;
	ld.global.nc.f32 	%f31, [%rd44];
	mul.f32 	%f32, %f31, %f28;
	mul.f32 	%f33, %f3, %f12;
	mul.f32 	%f34, %f2, %f13;
	sub.f32 	%f35, %f34, %f33;
	mul.f32 	%f36, %f1, %f13;
	mul.f32 	%f37, %f3, %f11;
	sub.f32 	%f38, %f37, %f36;
	mul.f32 	%f39, %f2, %f11;
	mul.f32 	%f40, %f1, %f12;
	sub.f32 	%f41, %f40, %f39;
	mul.f32 	%f42, %f2, %f41;
	mul.f32 	%f43, %f3, %f38;
	sub.f32 	%f44, %f42, %f43;
	mul.f32 	%f45, %f3, %f35;
	mul.f32 	%f46, %f1, %f41;
	sub.f32 	%f47, %f45, %f46;
	mul.f32 	%f48, %f1, %f38;
	mul.f32 	%f49, %f2, %f35;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f44, %f30;
	fma.rn.f32 	%f52, %f35, %f32, %f51;
	cvta.to.global.u64 	%rd47, %rd2;
	add.s64 	%rd49, %rd47, %rd18;
	ld.global.f32 	%f53, [%rd49];
	add.f32 	%f54, %f53, %f52;
	st.global.f32 	[%rd49], %f54;
	mul.f32 	%f55, %f47, %f30;
	fma.rn.f32 	%f56, %f38, %f32, %f55;
	cvta.to.global.u64 	%rd50, %rd3;
	add.s64 	%rd51, %rd50, %rd18;
	ld.global.f32 	%f57, [%rd51];
	add.f32 	%f58, %f57, %f56;
	st.global.f32 	[%rd51], %f58;
	mul.f32 	%f59, %f50, %f30;
	fma.rn.f32 	%f60, %f41, %f32, %f59;
	cvta.to.global.u64 	%rd52, %rd4;
	add.s64 	%rd53, %rd52, %rd18;
	ld.global.f32 	%f61, [%rd53];
	add.f32 	%f62, %f61, %f60;
	st.global.f32 	[%rd53], %f62;

BB0_5:
	ret;
}


`
   addspinorbittorque_ptx_50 = `
.version 6.1
.target sm_50
.address_size 64

	// .globl	addspinorbittorque

.visible .entry addspinorbittorque(
	.param .u64 addspinorbittorque_param_0,
	.param .u64 addspinorbittorque_param_1,
	.param .u64 addspinorbittorque_param_2,
	.param .u64 addspinorbittorque_param_3,
	.param .u64 addspinorbittorque_param_4,
	.param .u64 addspinorbittorque_param_5,
	.param .u64 addspinorbittorque_param_6,
	.param .u64 addspinorbittorque_param_7,
	.param .u64 addspinorbittorque_param_8,
	.param .u64 addspinorbittorque_param_9,
	.param .u64 addspinorbittorque_param_10,
	.param .u64 addspinorbittorque_param_11,
	.param .f32 addspinorbittorque_param_12,
	.param .u64 addspinorbittorque_param_13,
	.param .u64 addspinorbittorque_param_14,
	.param .u64 addspinorbittorque_param_15,
	.param .u32 addspinorbittorque_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<54>;


	ld.param.u64 	%rd2, [addspinorbittorque_param_0];
	ld.param.u64 	%rd3, [addspinorbittorque_param_1];
	ld.param.u64 	%rd4, [addspinorbittorque_param_2];
	ld.param.u64 	%rd5, [addspinorbittorque_param_3];
	ld.param.u64 	%rd6, [addspinorbittorque_param_4];
	ld.param.u64 	%rd7, [addspinorbittorque_param_5];
	ld.param.u64 	%rd8, [addspinorbittorque_param_6];
	ld.param.u64 	%rd9, [addspinorbittorque_param_7];
	ld.param.u64 	%rd10, [addspinorbittorque_param_8];
	ld.param.u64 	%rd11, [addspinorbittorque_param_9];
	ld.param.u64 	%rd12, [addspinorbittorque_param_10];
	ld.param.u64 	%rd13, [addspinorbittorque_param_11];
	ld.param.f32 	%f15, [addspinorbittorque_param_12];
	ld.param.u64 	%rd14, [addspinorbittorque_param_13];
	ld.param.u64 	%rd15, [addspinorbittorque_param_14];
	ld.param.u64 	%rd16, [addspinorbittorque_param_15];
	ld.param.u32 	%r1, [addspinorbittorque_param_16];
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r1;
	@%p1 bra 	BB0_5;

	cvta.to.global.u64 	%rd17, %rd5;
	mul.wide.s32 	%rd18, %r8, 4;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.nc.f32 	%f1, [%rd19];
	cvta.to.global.u64 	%rd20, %rd6;
	add.s64 	%rd21, %rd20, %rd18;
	ld.global.nc.f32 	%f2, [%rd21];
	cvta.to.global.u64 	%rd22, %rd7;
	add.s64 	%rd23, %rd22, %rd18;
	ld.global.nc.f32 	%f3, [%rd23];
	cvta.to.global.u64 	%rd24, %rd8;
	add.s64 	%rd25, %rd24, %rd18;
	ld.global.nc.f32 	%f4, [%rd25];
	cvta.to.global.u64 	%rd26, %rd9;
	add.s64 	%rd27, %rd26, %rd18;
	cvta.to.global.u64 	%rd28, %rd10;
	add.s64 	%rd29, %rd28, %rd18;
	cvta.to.global.u64 	%rd30, %rd11;
	add.s64 	%rd31, %rd30, %rd18;
	ld.global.nc.f32 	%f5, [%rd27];
	ld.global.nc.f32 	%f6, [%rd29];
	mul.f32 	%f17, %f6, %f6;
	fma.rn.f32 	%f18, %f5, %f5, %f17;
	ld.global.nc.f32 	%f7, [%rd31];
	fma.rn.f32 	%f19, %f7, %f7, %f18;
	sqrt.rn.f32 	%f8, %f19;
	mov.f32 	%f63, 0f00000000;
	setp.eq.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	rcp.rn.f32 	%f63, %f8;

BB0_3:
	mul.f32 	%f11, %f5, %f63;
	mul.f32 	%f12, %f6, %f63;
	mul.f32 	%f13, %f7, %f63;
	cvt.s64.s32	%rd32, %r8;
	cvta.to.global.u64 	%rd33, %rd16;
	add.s64 	%rd34, %rd33, %rd32;
	ld.global.nc.u8 	%rs1, [%rd34];
	cvt.u64.u16	%rd35, %rs1;
	and.b64  	%rd1, %rd35, 255;
	cvta.to.global.u64 	%rd36, %rd12;
	cvt.u32.u16	%r23, %rs1;
	and.b32  	%r24, %r23, 255;
	mul.wide.u32 	%rd37, %r24, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.nc.f32 	%f14, [%rd38];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_5;

	cvta.to.global.u64 	%rd39, %rd13;
	shl.b64 	%rd40, %rd1, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.nc.f32 	%f20, [%rd41];
	cvta.to.global.u64 	%rd42, %rd15;
	add.s64 	%rd44, %rd42, %rd37;
	cvta.to.global.u64 	%rd45, %rd14;
	add.s64 	%rd46, %rd45, %rd37;
	add.f32 	%f21, %f15, %f15;
	mul.f32 	%f22, %f21, %f14;
	div.rn.f32 	%f23, %f4, %f22;
	cvt.f64.f32	%fd1, %f23;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f24, %fd2;
	fma.rn.f32 	%f25, %f20, %f20, 0f3F800000;
	mov.f32 	%f26, 0fBF800000;
	div.rn.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f27, %f24;
	ld.global.nc.f32 	%f29, [%rd46];
	mul.f32 	%f30, %f29, %f28;
	ld.global.nc.f32 	%f31, [%rd44];
	mul.f32 	%f32, %f31, %f28;
	mul.f32 	%f33, %f3, %f12;
	mul.f32 	%f34, %f2, %f13;
	sub.f32 	%f35, %f34, %f33;
	mul.f32 	%f36, %f1, %f13;
	mul.f32 	%f37, %f3, %f11;
	sub.f32 	%f38, %f37, %f36;
	mul.f32 	%f39, %f2, %f11;
	mul.f32 	%f40, %f1, %f12;
	sub.f32 	%f41, %f40, %f39;
	mul.f32 	%f42, %f2, %f41;
	mul.f32 	%f43, %f3, %f38;
	sub.f32 	%f44, %f42, %f43;
	mul.f32 	%f45, %f3, %f35;
	mul.f32 	%f46, %f1, %f41;
	sub.f32 	%f47, %f45, %f46;
	mul.f32 	%f48, %f1, %f38;
	mul.f32 	%f49, %f2, %f35;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f44, %f30;
	fma.rn.f32 	%f52, %f35, %f32, %f51;
	cvta.to.global.u64 	%rd47, %rd2;
	add.s64 	%rd49, %rd47, %rd18;
	ld.global.f32 	%f53, [%rd49];
	add.f32 	%f54, %f53, %f52;
	st.global.f32 	[%rd49], %f54;
	mul.f32 	%f55, %f47, %f30;
	fma.rn.f32 	%f56, %f38, %f32, %f55;
	cvta.to.global.u64 	%rd50, %rd3;
	add.s64 	%rd51, %rd50, %rd18;
	ld.global.f32 	%f57, [%rd51];
	add.f32 	%f58, %f57, %f56;
	st.global.f32 	[%rd51], %f58;
	mul.f32 	%f59, %f50, %f30;
	fma.rn.f32 	%f60, %f41, %f32, %f59;
	cvta.to.global.u64 	%rd52, %rd4;
	add.s64 	%rd53, %rd52, %rd18;
	ld.global.f32 	%f61, [%rd53];
	add.f32 	%f62, %f61, %f60;
	st.global.f32 	[%rd53], %f62;

BB0_5:
	ret;
}


`
   addspinorbittorque_ptx_52 = `
.version 6.1
.target sm_52
.address_size 64

	// .globl	addspinorbittorque

.visible .entry addspinorbittorque(
	.param .u64 addspinorbittorque_param_0,
	.param .u64 addspinorbittorque_param_1,
	.param .u64 addspinorbittorque_param_2,
	.param .u64 addspinorbittorque_param_3,
	.param .u64 addspinorbittorque_param_4,
	.param .u64 addspinorbittorque_param_5,
	.param .u64 addspinorbittorque_param_6,
	.param .u64 addspinorbittorque_param_7,
	.param .u64 addspinorbittorque_param_8,
	.param .u64 addspinorbittorque_param_9,
	.param .u64 addspinorbittorque_param_10,
	.param .u64 addspinorbittorque_param_11,
	.param .f32 addspinorbittorque_param_12,
	.param .u64 addspinorbittorque_param_13,
	.param .u64 addspinorbittorque_param_14,
	.param .u64 addspinorbittorque_param_15,
	.param .u32 addspinorbittorque_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<54>;


	ld.param.u64 	%rd2, [addspinorbittorque_param_0];
	ld.param.u64 	%rd3, [addspinorbittorque_param_1];
	ld.param.u64 	%rd4, [addspinorbittorque_param_2];
	ld.param.u64 	%rd5, [addspinorbittorque_param_3];
	ld.param.u64 	%rd6, [addspinorbittorque_param_4];
	ld.param.u64 	%rd7, [addspinorbittorque_param_5];
	ld.param.u64 	%rd8, [addspinorbittorque_param_6];
	ld.param.u64 	%rd9, [addspinorbittorque_param_7];
	ld.param.u64 	%rd10, [addspinorbittorque_param_8];
	ld.param.u64 	%rd11, [addspinorbittorque_param_9];
	ld.param.u64 	%rd12, [addspinorbittorque_param_10];
	ld.param.u64 	%rd13, [addspinorbittorque_param_11];
	ld.param.f32 	%f15, [addspinorbittorque_param_12];
	ld.param.u64 	%rd14, [addspinorbittorque_param_13];
	ld.param.u64 	%rd15, [addspinorbittorque_param_14];
	ld.param.u64 	%rd16, [addspinorbittorque_param_15];
	ld.param.u32 	%r1, [addspinorbittorque_param_16];
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r1;
	@%p1 bra 	BB0_5;

	cvta.to.global.u64 	%rd17, %rd5;
	mul.wide.s32 	%rd18, %r8, 4;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.nc.f32 	%f1, [%rd19];
	cvta.to.global.u64 	%rd20, %rd6;
	add.s64 	%rd21, %rd20, %rd18;
	ld.global.nc.f32 	%f2, [%rd21];
	cvta.to.global.u64 	%rd22, %rd7;
	add.s64 	%rd23, %rd22, %rd18;
	ld.global.nc.f32 	%f3, [%rd23];
	cvta.to.global.u64 	%rd24, %rd8;
	add.s64 	%rd25, %rd24, %rd18;
	ld.global.nc.f32 	%f4, [%rd25];
	cvta.to.global.u64 	%rd26, %rd9;
	add.s64 	%rd27, %rd26, %rd18;
	cvta.to.global.u64 	%rd28, %rd10;
	add.s64 	%rd29, %rd28, %rd18;
	cvta.to.global.u64 	%rd30, %rd11;
	add.s64 	%rd31, %rd30, %rd18;
	ld.global.nc.f32 	%f5, [%rd27];
	ld.global.nc.f32 	%f6, [%rd29];
	mul.f32 	%f17, %f6, %f6;
	fma.rn.f32 	%f18, %f5, %f5, %f17;
	ld.global.nc.f32 	%f7, [%rd31];
	fma.rn.f32 	%f19, %f7, %f7, %f18;
	sqrt.rn.f32 	%f8, %f19;
	mov.f32 	%f63, 0f00000000;
	setp.eq.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	rcp.rn.f32 	%f63, %f8;

BB0_3:
	mul.f32 	%f11, %f5, %f63;
	mul.f32 	%f12, %f6, %f63;
	mul.f32 	%f13, %f7, %f63;
	cvt.s64.s32	%rd32, %r8;
	cvta.to.global.u64 	%rd33, %rd16;
	add.s64 	%rd34, %rd33, %rd32;
	ld.global.nc.u8 	%rs1, [%rd34];
	cvt.u64.u16	%rd35, %rs1;
	and.b64  	%rd1, %rd35, 255;
	cvta.to.global.u64 	%rd36, %rd12;
	cvt.u32.u16	%r23, %rs1;
	and.b32  	%r24, %r23, 255;
	mul.wide.u32 	%rd37, %r24, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.nc.f32 	%f14, [%rd38];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_5;

	cvta.to.global.u64 	%rd39, %rd13;
	shl.b64 	%rd40, %rd1, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.nc.f32 	%f20, [%rd41];
	cvta.to.global.u64 	%rd42, %rd15;
	add.s64 	%rd44, %rd42, %rd37;
	cvta.to.global.u64 	%rd45, %rd14;
	add.s64 	%rd46, %rd45, %rd37;
	add.f32 	%f21, %f15, %f15;
	mul.f32 	%f22, %f21, %f14;
	div.rn.f32 	%f23, %f4, %f22;
	cvt.f64.f32	%fd1, %f23;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f24, %fd2;
	fma.rn.f32 	%f25, %f20, %f20, 0f3F800000;
	mov.f32 	%f26, 0fBF800000;
	div.rn.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f27, %f24;
	ld.global.nc.f32 	%f29, [%rd46];
	mul.f32 	%f30, %f29, %f28;
	ld.global.nc.f32 	%f31, [%rd44];
	mul.f32 	%f32, %f31, %f28;
	mul.f32 	%f33, %f3, %f12;
	mul.f32 	%f34, %f2, %f13;
	sub.f32 	%f35, %f34, %f33;
	mul.f32 	%f36, %f1, %f13;
	mul.f32 	%f37, %f3, %f11;
	sub.f32 	%f38, %f37, %f36;
	mul.f32 	%f39, %f2, %f11;
	mul.f32 	%f40, %f1, %f12;
	sub.f32 	%f41, %f40, %f39;
	mul.f32 	%f42, %f2, %f41;
	mul.f32 	%f43, %f3, %f38;
	sub.f32 	%f44, %f42, %f43;
	mul.f32 	%f45, %f3, %f35;
	mul.f32 	%f46, %f1, %f41;
	sub.f32 	%f47, %f45, %f46;
	mul.f32 	%f48, %f1, %f38;
	mul.f32 	%f49, %f2, %f35;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f44, %f30;
	fma.rn.f32 	%f52, %f35, %f32, %f51;
	cvta.to.global.u64 	%rd47, %rd2;
	add.s64 	%rd49, %rd47, %rd18;
	ld.global.f32 	%f53, [%rd49];
	add.f32 	%f54, %f53, %f52;
	st.global.f32 	[%rd49], %f54;
	mul.f32 	%f55, %f47, %f30;
	fma.rn.f32 	%f56, %f38, %f32, %f55;
	cvta.to.global.u64 	%rd50, %rd3;
	add.s64 	%rd51, %rd50, %rd18;
	ld.global.f32 	%f57, [%rd51];
	add.f32 	%f58, %f57, %f56;
	st.global.f32 	[%rd51], %f58;
	mul.f32 	%f59, %f50, %f30;
	fma.rn.f32 	%f60, %f41, %f32, %f59;
	cvta.to.global.u64 	%rd52, %rd4;
	add.s64 	%rd53, %rd52, %rd18;
	ld.global.f32 	%f61, [%rd53];
	add.f32 	%f62, %f61, %f60;
	st.global.f32 	[%rd53], %f62;

BB0_5:
	ret;
}


`
   addspinorbittorque_ptx_53 = `
.version 6.1
.target sm_53
.address_size 64

	// .globl	addspinorbittorque

.visible .entry addspinorbittorque(
	.param .u64 addspinorbittorque_param_0,
	.param .u64 addspinorbittorque_param_1,
	.param .u64 addspinorbittorque_param_2,
	.param .u64 addspinorbittorque_param_3,
	.param .u64 addspinorbittorque_param_4,
	.param .u64 addspinorbittorque_param_5,
	.param .u64 addspinorbittorque_param_6,
	.param .u64 addspinorbittorque_param_7,
	.param .u64 addspinorbittorque_param_8,
	.param .u64 addspinorbittorque_param_9,
	.param .u64 addspinorbittorque_param_10,
	.param .u64 addspinorbittorque_param_11,
	.param .f32 addspinorbittorque_param_12,
	.param .u64 addspinorbittorque_param_13,
	.param .u64 addspinorbittorque_param_14,
	.param .u64 addspinorbittorque_param_15,
	.param .u32 addspinorbittorque_param_16
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<54>;


	ld.param.u64 	%rd2, [addspinorbittorque_param_0];
	ld.param.u64 	%rd3, [addspinorbittorque_param_1];
	ld.param.u64 	%rd4, [addspinorbittorque_param_2];
	ld.param.u64 	%rd5, [addspinorbittorque_param_3];
	ld.param.u64 	%rd6, [addspinorbittorque_param_4];
	ld.param.u64 	%rd7, [addspinorbittorque_param_5];
	ld.param.u64 	%rd8, [addspinorbittorque_param_6];
	ld.param.u64 	%rd9, [addspinorbittorque_param_7];
	ld.param.u64 	%rd10, [addspinorbittorque_param_8];
	ld.param.u64 	%rd11, [addspinorbittorque_param_9];
	ld.param.u64 	%rd12, [addspinorbittorque_param_10];
	ld.param.u64 	%rd13, [addspinorbittorque_param_11];
	ld.param.f32 	%f15, [addspinorbittorque_param_12];
	ld.param.u64 	%rd14, [addspinorbittorque_param_13];
	ld.param.u64 	%rd15, [addspinorbittorque_param_14];
	ld.param.u64 	%rd16, [addspinorbittorque_param_15];
	ld.param.u32 	%r1, [addspinorbittorque_param_16];
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r5, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r1;
	@%p1 bra 	BB0_5;

	cvta.to.global.u64 	%rd17, %rd5;
	mul.wide.s32 	%rd18, %r8, 4;
	add.s64 	%rd19, %rd17, %rd18;
	ld.global.nc.f32 	%f1, [%rd19];
	cvta.to.global.u64 	%rd20, %rd6;
	add.s64 	%rd21, %rd20, %rd18;
	ld.global.nc.f32 	%f2, [%rd21];
	cvta.to.global.u64 	%rd22, %rd7;
	add.s64 	%rd23, %rd22, %rd18;
	ld.global.nc.f32 	%f3, [%rd23];
	cvta.to.global.u64 	%rd24, %rd8;
	add.s64 	%rd25, %rd24, %rd18;
	ld.global.nc.f32 	%f4, [%rd25];
	cvta.to.global.u64 	%rd26, %rd9;
	add.s64 	%rd27, %rd26, %rd18;
	cvta.to.global.u64 	%rd28, %rd10;
	add.s64 	%rd29, %rd28, %rd18;
	cvta.to.global.u64 	%rd30, %rd11;
	add.s64 	%rd31, %rd30, %rd18;
	ld.global.nc.f32 	%f5, [%rd27];
	ld.global.nc.f32 	%f6, [%rd29];
	mul.f32 	%f17, %f6, %f6;
	fma.rn.f32 	%f18, %f5, %f5, %f17;
	ld.global.nc.f32 	%f7, [%rd31];
	fma.rn.f32 	%f19, %f7, %f7, %f18;
	sqrt.rn.f32 	%f8, %f19;
	mov.f32 	%f63, 0f00000000;
	setp.eq.f32	%p2, %f8, 0f00000000;
	@%p2 bra 	BB0_3;

	rcp.rn.f32 	%f63, %f8;

BB0_3:
	mul.f32 	%f11, %f5, %f63;
	mul.f32 	%f12, %f6, %f63;
	mul.f32 	%f13, %f7, %f63;
	cvt.s64.s32	%rd32, %r8;
	cvta.to.global.u64 	%rd33, %rd16;
	add.s64 	%rd34, %rd33, %rd32;
	ld.global.nc.u8 	%rs1, [%rd34];
	cvt.u64.u16	%rd35, %rs1;
	and.b64  	%rd1, %rd35, 255;
	cvta.to.global.u64 	%rd36, %rd12;
	cvt.u32.u16	%r23, %rs1;
	and.b32  	%r24, %r23, 255;
	mul.wide.u32 	%rd37, %r24, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.nc.f32 	%f14, [%rd38];
	setp.eq.f32	%p3, %f14, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB0_5;

	cvta.to.global.u64 	%rd39, %rd13;
	shl.b64 	%rd40, %rd1, 2;
	add.s64 	%rd41, %rd39, %rd40;
	ld.global.nc.f32 	%f20, [%rd41];
	cvta.to.global.u64 	%rd42, %rd15;
	add.s64 	%rd44, %rd42, %rd37;
	cvta.to.global.u64 	%rd45, %rd14;
	add.s64 	%rd46, %rd45, %rd37;
	add.f32 	%f21, %f15, %f15;
	mul.f32 	%f22, %f21, %f14;
	div.rn.f32 	%f23, %f4, %f22;
	cvt.f64.f32	%fd1, %f23;
	mul.f64 	%fd2, %fd1, 0d3CC7B6EF14E9250C;
	cvt.rn.f32.f64	%f24, %fd2;
	fma.rn.f32 	%f25, %f20, %f20, 0f3F800000;
	mov.f32 	%f26, 0fBF800000;
	div.rn.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f27, %f24;
	ld.global.nc.f32 	%f29, [%rd46];
	mul.f32 	%f30, %f29, %f28;
	ld.global.nc.f32 	%f31, [%rd44];
	mul.f32 	%f32, %f31, %f28;
	mul.f32 	%f33, %f3, %f12;
	mul.f32 	%f34, %f2, %f13;
	sub.f32 	%f35, %f34, %f33;
	mul.f32 	%f36, %f1, %f13;
	mul.f32 	%f37, %f3, %f11;
	sub.f32 	%f38, %f37, %f36;
	mul.f32 	%f39, %f2, %f11;
	mul.f32 	%f40, %f1, %f12;
	sub.f32 	%f41, %f40, %f39;
	mul.f32 	%f42, %f2, %f41;
	mul.f32 	%f43, %f3, %f38;
	sub.f32 	%f44, %f42, %f43;
	mul.f32 	%f45, %f3, %f35;
	mul.f32 	%f46, %f1, %f41;
	sub.f32 	%f47, %f45, %f46;
	mul.f32 	%f48, %f1, %f38;
	mul.f32 	%f49, %f2, %f35;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f44, %f30;
	fma.rn.f32 	%f52, %f35, %f32, %f51;
	cvta.to.global.u64 	%rd47, %rd2;
	add.s64 	%rd49, %rd47, %rd18;
	ld.global.f32 	%f53, [%rd49];
	add.f32 	%f54, %f53, %f52;
	st.global.f32 	[%rd49], %f54;
	mul.f32 	%f55, %f47, %f30;
	fma.rn.f32 	%f56, %f38, %f32, %f55;
	cvta.to.global.u64 	%rd50, %rd3;
	add.s64 	%rd51, %rd50, %rd18;
	ld.global.f32 	%f57, [%rd51];
	add.f32 	%f58, %f57, %f56;
	st.global.f32 	[%rd51], %f58;
	mul.f32 	%f59, %f50, %f30;
	fma.rn.f32 	%f60, %f41, %f32, %f59;
	cvta.to.global.u64 	%rd52, %rd4;
	add.s64 	%rd53, %rd52, %rd18;
	ld.global.f32 	%f61, [%rd53];
	add.f32 	%f62, %f61, %f60;
	st.global.f32 	[%rd53], %f62;

BB0_5:
	ret;
}


`
 )
